---
name: Security Scan & Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run security scans weekly on Sundays at 3 AM UTC
    - cron: '0 3 * * 0'

permissions:
  contents: read
  security-events: write

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js (fallback)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          if command -v bun &> /dev/null; then
            echo "Using Bun for installation"
            bun install
          else
            echo "Bun not available, using npm with legacy peer deps"
            npm install --legacy-peer-deps
          fi

      - name: Run security audit
        run: |
          if command -v bun &> /dev/null; then
            bun audit
          else
            npm audit --audit-level=moderate
          fi
        continue-on-error: true

      - name: Run ESLint security rules
        run: |
          if command -v bun &> /dev/null; then
            bun run lint
          else
            npm run lint
          fi

      - name: Build project
        run: |
          if command -v bun &> /dev/null; then
            bun run build
          else
            npm run build
          fi

  docker-security-scan:
    name: Docker Security Scan
    runs-on: ubuntu-latest
    needs: security-scan

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v4

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          load: true
          tags: medusa-2.0:security-scan
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: medusa-2.0:security-scan
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js (fallback)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          if command -v bun &> /dev/null; then
            echo "Using Bun for installation"
            bun install
          else
            echo "Bun not available, using npm with legacy peer deps"
            npm install --legacy-peer-deps
          fi

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Check for outdated packages
        run: |
          if command -v bun &> /dev/null; then
            bun outdated
          else
            npm outdated
          fi
        continue-on-error: true
